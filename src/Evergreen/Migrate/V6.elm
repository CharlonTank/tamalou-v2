module Evergreen.Migrate.V6 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V2.Card
import Evergreen.V2.Types
import Evergreen.V6.Card
import Evergreen.V6.Types
import Lamdera.Migrations exposing (..)
import List
import Ui
import Ui.Anim
import Ui.Layout
import Ui.Prose


frontendModel : Evergreen.V2.Types.FrontendModel -> ModelMigration Evergreen.V6.Types.FrontendModel Evergreen.V6.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V2.Types.BackendModel -> ModelMigration Evergreen.V6.Types.BackendModel Evergreen.V6.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V2.Types.FrontendMsg -> MsgMigration Evergreen.V6.Types.FrontendMsg Evergreen.V6.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V2.Types.ToBackend -> MsgMigration Evergreen.V6.Types.ToBackend Evergreen.V6.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V2.Types.BackendMsg -> MsgMigration Evergreen.V6.Types.BackendMsg Evergreen.V6.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V2.Types.ToFrontend -> MsgMigration Evergreen.V6.Types.ToFrontend Evergreen.V6.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V2.Types.FrontendModel -> Evergreen.V6.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , device = { class = Phone, orientation = Portrait }
    , gameFrontend = old.gameFrontend |> migrate_Types_FGame
    , clientId = old.clientId
    , sessionId = old.sessionId
    , urlPath = old.urlPath
    }


migrate_Card_Card : Evergreen.V2.Card.Card -> Evergreen.V6.Card.Card
migrate_Card_Card old =
    { suit = old.suit |> migrate_Card_Suit
    , rank = old.rank |> migrate_Card_Rank
    , show = old.show
    }


migrate_Card_FCard : Evergreen.V2.Card.FCard -> Evergreen.V6.Card.FCard
migrate_Card_FCard old =
    case old of
        Evergreen.V2.Card.FaceUp p0 ->
            Evergreen.V6.Card.FaceUp (p0 |> migrate_Card_Card)

        Evergreen.V2.Card.FaceDown ->
            Evergreen.V6.Card.FaceDown


migrate_Card_Rank : Evergreen.V2.Card.Rank -> Evergreen.V6.Card.Rank
migrate_Card_Rank old =
    case old of
        Evergreen.V2.Card.Ace ->
            Evergreen.V6.Card.Ace

        Evergreen.V2.Card.Two ->
            Evergreen.V6.Card.Two

        Evergreen.V2.Card.Three ->
            Evergreen.V6.Card.Three

        Evergreen.V2.Card.Four ->
            Evergreen.V6.Card.Four

        Evergreen.V2.Card.Five ->
            Evergreen.V6.Card.Five

        Evergreen.V2.Card.Six ->
            Evergreen.V6.Card.Six

        Evergreen.V2.Card.Seven ->
            Evergreen.V6.Card.Seven

        Evergreen.V2.Card.Eight ->
            Evergreen.V6.Card.Eight

        Evergreen.V2.Card.Nine ->
            Evergreen.V6.Card.Nine

        Evergreen.V2.Card.Ten ->
            Evergreen.V6.Card.Ten

        Evergreen.V2.Card.Jack ->
            Evergreen.V6.Card.Jack

        Evergreen.V2.Card.Queen ->
            Evergreen.V6.Card.Queen

        Evergreen.V2.Card.King ->
            Evergreen.V6.Card.King


migrate_Card_Suit : Evergreen.V2.Card.Suit -> Evergreen.V6.Card.Suit
migrate_Card_Suit old =
    case old of
        Evergreen.V2.Card.Clubs ->
            Evergreen.V6.Card.Clubs

        Evergreen.V2.Card.Diamonds ->
            Evergreen.V6.Card.Diamonds

        Evergreen.V2.Card.Hearts ->
            Evergreen.V6.Card.Hearts

        Evergreen.V2.Card.Spades ->
            Evergreen.V6.Card.Spades


migrate_Types_DiscardPile : Evergreen.V2.Types.DiscardPile -> Evergreen.V6.Types.DiscardPile
migrate_Types_DiscardPile old =
    old |> List.map migrate_Card_Card


migrate_Types_FDrawPile : Evergreen.V2.Types.FDrawPile -> Evergreen.V6.Types.FDrawPile
migrate_Types_FDrawPile old =
    old |> List.map migrate_Card_FCard


migrate_Types_FGame : Evergreen.V2.Types.FGame -> Evergreen.V6.Types.FGame
migrate_Types_FGame old =
    case old of
        Evergreen.V2.Types.FWaitingForPlayers p0 ->
            Evergreen.V6.Types.FWaitingForPlayers (p0 |> List.map migrate_Types_FPlayer)

        Evergreen.V2.Types.FGameInProgress p0 p1 p2 p3 p4 ->
            Evergreen.V6.Types.FGameInProgress (p0 |> migrate_Types_FTableHand)
                (p1 |> migrate_Types_FDrawPile)
                (p2 |> migrate_Types_DiscardPile)
                (p3 |> List.map migrate_Types_FPlayer)
                (p4 |> migrate_Types_FGameInProgressStatus)

        Evergreen.V2.Types.FGameEnded p0 ->
            Evergreen.V6.Types.FGameEnded p0

        Evergreen.V2.Types.FGameAlreadyStartedWithoutYou ->
            Evergreen.V6.Types.FGameAlreadyStartedWithoutYou


migrate_Types_FGameInProgressStatus : Evergreen.V2.Types.FGameInProgressStatus -> Evergreen.V6.Types.FGameInProgressStatus
migrate_Types_FGameInProgressStatus old =
    case old of
        Evergreen.V2.Types.FTimerRunning p0 ->
            Evergreen.V6.Types.FTimerRunning p0

        Evergreen.V2.Types.FPlayerToPlay p0 p1 ->
            Evergreen.V6.Types.FPlayerToPlay p0 (p1 |> migrate_Types_FPlayerToPlayStatus)

        Evergreen.V2.Types.FYourTurn p0 ->
            Evergreen.V6.Types.FYourTurn (p0 |> migrate_Types_FPlayerToPlayStatus)


migrate_Types_FPlayer : Evergreen.V2.Types.FPlayer -> Evergreen.V6.Types.FPlayer
migrate_Types_FPlayer old =
    { name = old.name
    , tableHand = old.tableHand |> List.map migrate_Card_FCard
    , clientId = old.clientId
    , sessionId = old.sessionId
    }


migrate_Types_FPlayerToPlayStatus : Evergreen.V2.Types.FPlayerToPlayStatus -> Evergreen.V6.Types.FPlayerToPlayStatus
migrate_Types_FPlayerToPlayStatus old =
    case old of
        Evergreen.V2.Types.FWaitingPlayerDraw ->
            Evergreen.V6.Types.FWaitingPlayerDraw

        Evergreen.V2.Types.FPlayerHasDraw p0 ->
            Evergreen.V6.Types.FPlayerHasDraw (p0 |> migrate_Card_FCard)


migrate_Types_FTableHand : Evergreen.V2.Types.FTableHand -> Evergreen.V6.Types.FTableHand
migrate_Types_FTableHand old =
    old |> List.map migrate_Card_FCard


migrate_Types_FrontendMsg : Evergreen.V2.Types.FrontendMsg -> Evergreen.V6.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V2.Types.UrlClicked p0 ->
            Evergreen.V6.Types.UrlClicked p0

        Evergreen.V2.Types.UrlChanged p0 ->
            Evergreen.V6.Types.UrlChanged p0

        Evergreen.V2.Types.NoOpFrontendMsg ->
            Evergreen.V6.Types.NoOpFrontendMsg

        Evergreen.V2.Types.DrawCardFromDeckFrontend ->
            Evergreen.V6.Types.DrawCardFromDeckFrontend

        Evergreen.V2.Types.TamalouFrontend ->
            Evergreen.V6.Types.TamalouFrontend

        Evergreen.V2.Types.DiscardCardFrontend ->
            Evergreen.V6.Types.DiscardCardFrontend

        Evergreen.V2.Types.DrawCardFromDiscardPileFrontend ->
            Evergreen.V6.Types.DrawCardFromDiscardPileFrontend

        Evergreen.V2.Types.ReplaceCardInFrontend p0 ->
            Evergreen.V6.Types.ReplaceCardInFrontend p0

        Evergreen.V2.Types.DoubleCardFrontend p0 ->
            Evergreen.V6.Types.DoubleCardFrontend p0
